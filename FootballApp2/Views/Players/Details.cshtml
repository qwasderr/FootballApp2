@model FootballApp2.Models.Player
@using System;
@using System.Net;
@using FootballApp2.Models.JsonModels;
@using System.Text.Json;
@using System.Text.RegularExpressions;
@using AngleSharp;
@using FootballApp2.Models.JsonModels.RootJsonModel;
@using FootballApp2.Models.JsonModels.RootJsonModelTeam;
@using System.Reflection;
@{




    //string uri = Model.PlayerUrl;
    string seo;
    string standingswidget;
    string seot1, seot2, seot3, seot4;
    string[] substrings = Model.PlayerUrl.Split("/");
    var len = substrings.Length;
    var widget = "https://widgets.sofascore.com/embed/player/" + substrings[len - 1];
    string uri = $"https://api.sofascore.app/api/v1/player/{substrings[len - 1]}";
    //string playerUrl = $"https://www.sofascore.com/player/{slug}/{substrings[len - 1]}";
    var picurl = uri + "/image";
    HttpClient _client = new HttpClient();
    using HttpResponseMessage response = await _client.GetAsync(uri);
    var resp = await response.Content.ReadAsStringAsync();
    Rootobject? player =
               JsonSerializer.Deserialize<Rootobject>(resp);
    var slug = player.player.slug;
    var tournamentUrl = $"https://www.sofascore.com/tournament/football/{player.player.team.tournament.category.slug}/{player.player.team.tournament.slug}/{player.player.team.tournament.uniqueTournament.id}";
}   
@{
    ViewData["Title"] = @$"Деталі гравця {player.player.name}";
}

 @{/*#image{
        border-radius: 50%;
        object-fit: cover;
    }*/}
<link rel="preload" href="/css/Details_style.css" as="style" onload="this.rel='stylesheet'">
<style>
    #image {
        border-radius: 50%;
        object-fit: cover;
    }

    #widget {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-gap: 20px;
        width: 100%;
    }

    #sofa-player {
        height: 728px !important;
        max-width: 420px !important;
        width: 100% !important;
        margin: 10px;
    }

    #sofa-standings {
        height: 738px !important;
        max-width: 620px !important;
        width: 100% !important;
        margin: 10px;
    }
</style>
<h1 style="text-align:center">Деталі гравця @player.player.name</h1>
<div>
    @{

        using (HttpClient client = new HttpClient())
        {
            using (HttpResponseMessage response2 = await client.GetAsync(Model.PlayerUrl))
            {
                using (HttpContent content = response2.Content)
                {
                    string result = await content.ReadAsStringAsync();
                    var config = Configuration.Default;
                    using var context = BrowsingContext.New(config);
                    using var doc = await context.OpenAsync(req => req.Content(result));
                    //var AllDiv = doc.All.Where(m => m.LocalName == "script" && m.HasAttribute("id") && m.GetAttribute("id").StartsWith("__NEXT_DATA__"));

                    var script = doc.All.Where(m => m.LocalName == "script" && m.Id == "__NEXT_DATA__").FirstOrDefault();
                    var json = script.InnerHtml;
                    Rootobject2? info =
                    JsonSerializer.Deserialize<Rootobject2>(json);
                    seo = info.props.pageProps.seoContent.about;
                    var a = 1;
                }
            }
            using (HttpResponseMessage response2 = await client.GetAsync(tournamentUrl))
            {
                using (HttpContent content = response2.Content)
                {
                    string result = await content.ReadAsStringAsync();
                    var config = Configuration.Default;
                    using var context = BrowsingContext.New(config);
                    using var doc = await context.OpenAsync(req => req.Content(result));
                    //var AllDiv = doc.All.Where(m => m.LocalName == "script" && m.HasAttribute("id") && m.GetAttribute("id").StartsWith("__NEXT_DATA__"));

                    var script = doc.All.Where(m => m.LocalName == "script" && m.Id == "__NEXT_DATA__").FirstOrDefault();
                    var json = script.InnerHtml;
                    Rootobject3? info =
                    JsonSerializer.Deserialize<Rootobject3>(json);
                    //List<string> seotournament=new List<string>();
                    /*seot1 = info.props.messages.tournamentaboutfootballleague25;
                    seot2 = info.props.messages.tournamentaboutfootballleague26;
                    seot3 = info.props.messages.tournamentaboutfootballleague27;
                    seot4 = info.props.messages.tournamentaboutfootballleague28;*/
                    var seasonId = info.props.pageProps.seasons[0].id;
                    var tournamentId = info.props.footerEvents[0].tournament.id;
                    standingswidget = $"https://widgets.sofascore.com/embed/tournament/{tournamentId}/season/{seasonId}/standings";
                    var a = 1;
                }
            }
        }
        
        
    }
    <div id="bc">
    <p><h2>Деталі гравця</h2></p>
    <hr />
    <div id="bc1">
    <div class="headdiv" >
    <img src=@picurl id="image" alt="PlayerPhoto"></img>
                <a id="playername">@player.player.name</a>
    </div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Position)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Position)
        </dd>
        <dt class="col-sm-2">
            Назва турніру
        </dt>
        <dd class="col-sm-10">
            @player.player.team.tournament.name
        </dd>
        <dt class="col-sm-2">
            Номер
        </dt>
        <dd class="col-sm-10">
            @player.player.jerseyNumber
        </dd>
        <dt class="col-sm-2">
            Зріст
        </dt>
        <dd class="col-sm-10">
            @player.player.height
        </dd>
        <dt class="col-sm-2">
            Ведуча нога
        </dt>
        <dd class="col-sm-10">
            @player.player.preferredFoot
        </dd>

        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BirthDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BirthDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerUrl)
        </dt>
        <dd class="col-sm-10">
                    <a href="@Html.DisplayFor(model => model.PlayerUrl)">@Html.DisplayFor(model => model.PlayerUrl)</a>
                    
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Team)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Team.Name)
        </dd>
    </dl>
</div>
</div>

    <div id="widget">
        <div style="align-items:center; text-align:center">
            <p>Статистика гравця</p>
    <iframe id="sofa-player" src=@widget
                frameborder="0" scrolling="no"></iframe>
        </div>
        <div style="align-items:center; text-align:center">
            <p>Турнірна таблиця чемпіонату</p>
            <iframe id="sofa-standings" src=@standingswidget
                    frameborder="0" scrolling="no"></iframe>
        </div>
    </div>
        <div id ="seocontent">
            @Html.Raw(seo)
        </div>
        <div>
        <p>
            Stay connected with us for the latest updates on @player.player.name's career. Don't miss a beat of their extraordinary career! Explore our website regularly for more football news, insights, and exclusive content, and join us in celebrating the incredible journey of this football icon.
        </p>
        <p>
            How to Stay Connected:</p>
        <ol><li>Subscribe: Subscribe to our newsletter to receive regular updates in your inbox.</li><li>Follow Us: Follow us on social media platforms like Twitter, Facebook, and Instagram for real-time updates and engaging content.</li><li>Bookmark: Don't forget to bookmark our website and check back frequently for the latest news.</li></ol>
        </div>
    
    <div class="buttons">
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="button">Редагувати</a> |
        <a asp-action="Index" class="button">Повернутись назад</a>
    </div>
</div>

